networks:
  monitoring:
    driver: bridge
volumes:
  prometheus_data: {}
  grafana-data: {}
  alertmanager-data: {}

services:

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./config/prometheus:/etc/prometheus
      - ./config/prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.config.file=/etc/prometheus/web.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=365d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ./config/alertmanager:/etc/alertmanager
      - alertmanager-data:/data
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - monitoring

  blackbox-exporter:
    image: prom/blackbox-exporter
    restart: always
    container_name: blackbox-exporter
    command:
      - '--config.file=/etc/blackboxexporter/blackbox-exporter.yml'
    volumes:
      - ./config/blackbox:/etc/blackboxexporter
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '443:3000'
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./ssl:/etc/grafana/ssl
    networks:
      - monitoring
